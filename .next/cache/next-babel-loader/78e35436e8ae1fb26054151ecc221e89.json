{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { parseEther } from \"@ethersproject/units\";\nimport Account from \"./Account\";\nimport useContract from \"../hooks/useContract\";\nimport useEagerConnect from \"../hooks/useEagerConnect\";\nimport { constants } from \"../util\";\nimport Comptroller from \"../abi/Comptroller.json\";\n\nconst fetcher = (...args) => fetch(args[0], args[1]).then(res => res.json());\n\nconst defaultFormData = {\n  paymentid: \"\",\n  amount: \"\",\n  fiat: \"\",\n  escrow: \"\"\n};\n\nconst formReducer = (state, event) => {\n  if (event.reset) {\n    return defaultFormData;\n  }\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    [event.name]: event.value\n  });\n};\n\nexport default function Buy() {\n  const {\n    0: formData,\n    1: setFormData\n  } = useReducer(formReducer, defaultFormData);\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const {\n    0: reverted,\n    1: setReverted\n  } = useState(false);\n  const triedToEagerConnect = useEagerConnect();\n  const comptroller = useContract(constants.COMPTROLLER_ADDRESS, Comptroller, true);\n  const {\n    library,\n    account\n  } = useWeb3React();\n  const isConnected = typeof account === \"string\" && !!library;\n  const {\n    data,\n    error\n  } = useSWR('/api/prices', fetcher, {\n    refreshInterval: 5000\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setReverted(false);\n    await comptroller.requestFiatPayment(formData.escrow || constants.ESCROW_ADDRESS, account, parseEther(formData.amount), formData.paymentid).then(res => {\n      setFormData({\n        reset: true\n      });\n    }).catch(e => {\n      if (e.code == -32016) setReverted(true);\n      console.error(e);\n    }).finally(() => setSubmitting(false));\n  };\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value\n    });\n  };\n\n  const calFiatAmount = res => {\n    if (!res) return;\n    if (!formData.amount) return \"\";\n    const price = res.ethinr.last;\n    return (formData.amount * price).toString();\n  };\n\n  return __jsx(\"form\", {\n    className: \"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-xs mb-2\"\n  }, \"Buy\"), __jsx(\"input\", {\n    className: \"w-auto appearance-none border-2 border-gray-200 rounded py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:border-purple-500\",\n    name: \"amount\",\n    disabled: submitting,\n    inputMode: \"decimal\",\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\",\n    placeholder: \"0.0\",\n    onChange: handleChange,\n    value: formData.amount\n  }), __jsx(\"div\", {\n    className: \"w-auto inline-block p-2\"\n  }, \"ETH\")), __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-xs mb-2\"\n  }, \"For (estimated)\"), __jsx(\"input\", {\n    className: \"w-auto appearance-none border-2 border-gray-200 rounded py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:border-purple-500\",\n    name: \"fiat\",\n    disabled: submitting,\n    inputMode: \"decimal\",\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\",\n    placeholder: \"0.0\",\n    onChange: handleChange,\n    value: calFiatAmount(data)\n  }), __jsx(\"div\", {\n    className: \"w-auto inline-block p-2\"\n  }, \"INR\")), __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-xs mb-2\"\n  }, \"UPI ID\"), __jsx(\"input\", {\n    className: \"appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:border-purple-500\",\n    name: \"paymentid\",\n    disabled: submitting,\n    type: \"text\",\n    minLength: 1,\n    maxLength: 79,\n    placeholder: \"unique_Id\",\n    onChange: handleChange,\n    value: formData.paymentid\n  })), __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-xs mb-2\"\n  }, \"Escrow address (optional)\"), __jsx(\"input\", {\n    className: \"appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:border-purple-500\",\n    name: \"escrow\",\n    disabled: submitting,\n    type: \"text\",\n    minLength: 1,\n    maxLength: 79,\n    placeholder: constants.ESCROW_ADDRESS,\n    onChange: handleChange,\n    value: formData.escrow\n  })), reverted && // or link\n  __jsx(\"div\", {\n    className: \"w-full flex pt-4\"\n  }, \"Not enough funds in escrow...\"), __jsx(\"div\", {\n    className: \"w-full flex pt-4\"\n  }, isConnected ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    className: \"btn-blue m-auto\"\n  }, \"Pay\") : __jsx(\"div\", {\n    className: \"m-auto\"\n  }, __jsx(Account, {\n    triedToEagerConnect: triedToEagerConnect\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}