{"ast":null,"code":"import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injected } from \"../connectors\";\nexport default function useEagerConnect() {\n  const {\n    activate,\n    active\n  } = useWeb3React();\n  const {\n    0: tried,\n    1: setTried\n  } = useState(false);\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]); // if the connection worked, wait until we get confirmation of that to flip the flag\n\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n  return tried;\n}","map":null,"metadata":{},"sourceType":"module"}