{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { UserRejectedRequestError } from \"@web3-react/injected-connector\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { injected } from \"../connectors\";\nimport useENSName from \"../hooks/useENSName\";\nimport { formatEtherscanLink, shortenHex } from \"../util\";\n\nconst Account = ({\n  triedToEagerConnect\n}) => {\n  const {\n    active,\n    error,\n    activate,\n    chainId,\n    account,\n    setError\n  } = useWeb3React(); // initialize metamask onboarding\n\n  const onboarding = useRef();\n  useLayoutEffect(() => {\n    onboarding.current = new MetaMaskOnboarding();\n  }, []); // manage connecting state for injected connector\n\n  const {\n    0: connecting,\n    1: setConnecting\n  } = useState(false);\n  useEffect(() => {\n    if (active || error) {\n      var _onboarding$current;\n\n      setConnecting(false);\n      (_onboarding$current = onboarding.current) === null || _onboarding$current === void 0 ? void 0 : _onboarding$current.stopOnboarding();\n    }\n  }, [active, error]);\n  const ENSName = useENSName(account);\n\n  if (error) {\n    return null;\n  }\n\n  if (!triedToEagerConnect) {\n    return null;\n  }\n\n  if (typeof account !== \"string\") {\n    var _window, _window2;\n\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const hasMetaMaskOrWeb3Available = MetaMaskOnboarding.isMetaMaskInstalled() || ((_window = window) === null || _window === void 0 ? void 0 : _window.ethereum) || ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.web3);\n    return __jsx(\"div\", {\n      className: \"btn-blue hover:bg-blue-700 no-underline px-2\"\n    }, hasMetaMaskOrWeb3Available ? __jsx(\"button\", {\n      onClick: () => {\n        setConnecting(true);\n        activate(injected, undefined, true).catch(error => {\n          // ignore the error if it's a user rejected request\n          if (error instanceof UserRejectedRequestError) {\n            setConnecting(false);\n          } else {\n            setError(error);\n          }\n        });\n      }\n    }, MetaMaskOnboarding.isMetaMaskInstalled() ? \"Connect to MetaMask\" : \"Connect to Wallet\") : __jsx(\"button\", {\n      onClick: () => {\n        var _onboarding$current2;\n\n        return (_onboarding$current2 = onboarding.current) === null || _onboarding$current2 === void 0 ? void 0 : _onboarding$current2.startOnboarding();\n      }\n    }, \"Install Metamask\"));\n  }\n\n  return __jsx(\"a\", {\n    href: formatEtherscanLink(\"Account\", [chainId, account]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, ENSName || `${shortenHex(account, 4)}`);\n};\n\nexport default Account;","map":null,"metadata":{},"sourceType":"module"}