{"ast":null,"code":"import { formatUnits } from \"@ethersproject/units\";\nexport const constants = {\n  COMPTROLLER_ADDRESS: \"0xcE589FC23EE7AB377e07c513e6b32e93ab57CF1B\",\n  ESCROW_ADDRESS: \"0x8eeC1CDc04feBceaF80543ab6887E2a7fdEB88CE\",\n  ESCROW_FACTORY_ADDRESS: \"0x8f83522DECe212fCcc0a124A14b59C1EaA07882F\"\n};\nexport function shortenHex(hex, length = 4) {\n  return `${hex.substring(0, length + 2)}â€¦${hex.substring(hex.length - length)}`;\n}\nconst ETHERSCAN_PREFIXES = {\n  1: \"\",\n  3: \"ropsten.\",\n  4: \"rinkeby.\",\n  5: \"goerli.\",\n  42: \"kovan.\"\n};\nexport const INFURA_PREFIXES = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan'\n};\nexport const POKT_PREFIXES = {\n  1: 'eth-mainnet',\n  3: 'eth-ropsten',\n  4: 'eth-rinkeby',\n  5: 'eth-goerli',\n  42: 'poa-kovan'\n};\n/**\n *\n * @param {(\"Account\"|\"Transaction\")} type\n * @param {[number, string]} data\n */\n\nexport function formatEtherscanLink(type, data) {\n  switch (type) {\n    case \"Account\":\n      {\n        const [chainId, address] = data;\n        return `https://${ETHERSCAN_PREFIXES[chainId]}etherscan.io/address/${address}`;\n      }\n\n    case \"Transaction\":\n      {\n        const [chainId, hash] = data;\n        return `https://${ETHERSCAN_PREFIXES[chainId]}etherscan.io/tx/${hash}`;\n      }\n  }\n}\n/**\n * @name parseBalance\n *\n * @param {import(\"@ethersproject/bignumber\").BigNumberish} balance\n * @param {number} decimals\n * @param {number} decimalsToDisplay\n *\n * @returns {string}\n */\n\nexport const parseBalance = (balance, decimals = 18, decimalsToDisplay = 3) => Number(formatUnits(balance, decimals)).toFixed(decimalsToDisplay);","map":null,"metadata":{},"sourceType":"module"}